---
import { getCollection, type CollectionEntry } from "astro:content"

import placeholder from "../../../assets/placeholder-trip.jpg"
import Cover from "../../../components/Cover.astro"
import { getImage } from "astro:assets"
import BaseLayout from "../../../layouts/BaseLayout.astro"

export async function getStaticPaths() {
  const allPosts = await getCollection("travel")
  const trips = await getCollection("trips")

  return trips.map(trip => {
    const posts = allPosts
      .filter(post => post.slug.split("/")[0] === trip.id)
      .filter(post => !post.data.hidden)
      .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())

    return {
      params: { trip: trip.id },
      props: { posts, trip },
    }
  })
}

type Props = {
  posts: CollectionEntry<"travel">[]
  trip: CollectionEntry<"trips">
}
const { posts, trip } = Astro.props

const coverBackground = await getImage({
  src: trip.data.cover || placeholder,
})
---

<BaseLayout>
  <Cover
    variant="inset"
    background={coverBackground.src}
    heading={trip.data.title}
    subheading={trip.data.years.join(" - ")}
    backLink="/travel"
    id={trip.id}
  />

  <main>
    <ul>
      {
        posts.map(post => {
          const date = post.data.pubDate.toLocaleString("default", {
            day: "2-digit",
          })
          const month = post.data.pubDate.toLocaleString("default", {
            month: "short",
          })

          return (
            <li>
              <a href={post.slug}>
                <span class="post-date">{date}</span>
                <span class="post-month">{month}</span>
                <div class="post-name">
                  <span class="post-title">{post.data.title}</span>
                  {post.data.subtitle && (
                    <span class="post-subtitle">{post.data.subtitle}</span>
                  )}
                </div>
              </a>
            </li>
          )
        })
      }
    </ul>
  </main>
</BaseLayout>

<style>
  main {
    width: 100%;
    max-width: 100%;
    padding: 5rem 1rem 1rem;
  }

  img {
    width: 100%;
    max-height: 30vh;
    object-fit: cover;
    border-radius: 0;
  }

  h1 {
    color: #222;
    text-align: center;
  }

  h2 {
    color: #222;
    font-size: 2rem;
    text-align: center;
    margin-bottom: 4rem;
    font-weight: 100;
  }

  ul {
    display: grid;
    gap: 1rem;
    list-style: none;
    margin: 0;
    padding: 0;
    max-width: 60ch;
    margin-inline: auto;
  }

  li {
    background-color: var(--surface-background-color);
    border: 1px solid var(--subtle-background-color);
    border-radius: 1.5rem;
    overflow: hidden;
    font-size: 1.25rem;
  }

  a {
    display: grid;
    grid-template-columns: 60px 1fr;
    grid-template-areas:
      "date name"
      "month name";
    grid-gap: 0 0.5rem;
    padding: 0.5rem;
    text-decoration: none;
    color: currentColor;
    min-height: 80px;
    -webkit-tap-highlight-color: transparent;
  }

  .post-date {
    grid-area: date;
    font-size: 1.75rem;
    color: var(--body-text-color-03);
    text-align: center;
    line-height: 2rem;
    transform: translateY(7px);
  }

  .post-month {
    grid-area: month;
    font-size: 1rem;
    color: var(--body-text-color-03);
    text-align: center;
    text-transform: uppercase;
  }

  .post-name {
    display: grid;
    grid-area: name;
    line-height: 2rem;
    align-self: center;
    transform: translateY(0.25rem);
    text-wrap: balance;
  }

  .post-title {
    font-size: 1.5rem;
    line-height: 2rem;

    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .post-subtitle {
    font-size: 1rem;
    line-height: 1.5rem;
    color: var(--body-text-color-02);
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
</style>
